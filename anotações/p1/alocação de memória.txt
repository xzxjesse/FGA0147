memória
    armazenamento de dados

-memória física
    componentes eletrônicos que conservam estados
        1 (alta tensão) e 0 (baixa tensão)
    computador
        dados (sistema binário)
        lógica (álgebra booleana)
        circuitos de computação de estados
    endereços
        variáveis
            são alocadas na memória
            a alocação é chamada de endereço 
            o endereço é dado pelo byte menos significativo
                1 byte = 4 bits
        vetores
            cada posição tem um endereço
            cada posição é calculadas a partir do entedereço inicial
            endereço inicial é apontado pelo identificador do array
        matriz
            funcionam como vetores de vetores 
            são armazenados de forma continua
    ponteiros
        são variáveis capazes de armazenar e manipular os endereços de memória
        indicado pelo símbolo *
        sintaxe
            TIPO *ponteiro
        tem tamanho fixo
        pode ser NULL, 0

-memória para os processos
    processo: programa em execução
        possui uma porção da memória
            é organizada por segmentos, de endereços maiores para menores
                -stack: variáveis locais, parâmetros de funções e endereços de retorno
                -heap: blocos de memória alocadas dinamicamente, a pedodo do processo
                -data: variáveis globais e estáticas
                -text: código que está sendo executado
                -comando: size executável, listando os tamanhos de seção e tamanho total de arquivos binários
    alocação
        -estática
            data
                armazena variáveis globais e locais declaras e não modificada explicitamente
        -automática
            stack
                armazena variáveis locais e parâmetros de funções, assim como endereços de retorno
                alocação e desalocação de forma automática
                tempo de vida: existência da função
                tamanho: limitado pelo SO
            alocação de variáveis
                cada tipo tem um tamanho
                automática
                    tamanho e quantidade separados no chamamento da função e liberado após o termino da função
                para tipos primitivos, estruturas de dados e registros
        -dinâmica
            alocada durante a execução
            tamanhos maiores do que a stack permite
            no heap de cada processo
            organiza os dados que se modificam a cada entrada (estruturas de dados)
            -sizeof
                computar o tamanho dos operadores
                retornar o tamanho em bytes
                sintaxe:
                    sizeof (tipo_dado || variavel);
            -malloc
                aloca uma quantidade de bytes
                retorna um ponteiro
                memória não é inicializada
                retorna NULL para erro
                se for requerido zero irá retornar um valor que pode ser passado para a função que libera memória
                não é garantida a disponibilidade
            -free
                liber um espaço que havia sido alocado dinamicamente, apontado por um ponteiro
                não retorna valor
            -calloc
                aloca memória para um array de determinado tamanho
                retorna um ponteiro
                NULL em caso de erro
                se for requerido zero irá retornar um valor que pode ser passado para a função que libera memória
                a memória é inicializada com zero
            -realloc
                altera o tamanho da memória apontada por um ponteiro
                não afeta o conteúdo
                se aumentar o tamanho, não ira inicializar a nova memória
                se o ponteiro for NULL será alocado como uma nova memória (malloc)
                retorna um ponteiro para a nova memória (podendo ser diferente ou a mesma de antes)
                retorna NULL em caso de erro ou se for requisitado zero bytes pois será apontado um espaço livre
            *alocação dinâmica de uma matriz (linear)
                1 ponteiro para o inicio da matriz
            *alocação dinâmica de uma matriz (vetores)
                1 ponteiro para ponteiros