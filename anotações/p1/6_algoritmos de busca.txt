tabela de símbolos
    chave-valor
        armazena valores que podem ser acessados por uma chave
    dificuldade
        definir uma estrutura que armazene uma grande quantidade de dados
        definir uma forma de recuperação de informações de modo eficiente
    proposito
        associar chave e valor
        a partir da chave se deve encontrar o valor
    chaves duplicadas
        cada sistema define se é permitido ou não
    computacionalmente
        estrutura de dados + algoritmo de busca
        operações básicas
            inserção
            busca
            remoção
    vetor com chave indexada
        índices são/representam as chaves
        conteúdo
            valores associados as chaves
        sem chave duplicada
        inserção de item com chave pré-existente
            será sobrescrito
        chaves
            intervalos pequenos
        algoritmo de busca
            acesso direto
    vetor ordenado
        conteúdo
            chave+valor
        admite chave duplicada
        chaves
            intervalos grandes
        algoritmo de busca
            sequencial, binário
    árvores binárias
        algumas permitem chaves duplicadas 
            busca e remoção: ordem de inserção
        intervalos grandes
        algoritmos de busca
            profundidade
                deapth first search DFS
            largura
                breadth-first search BFS
            binária
    
algoritmos de busca
    busca binária em vetores ordenados
        paradigma da divisão e conquista
            dividir no meio o vetor
            procurar na esquerda: se o procurado for menor que o central
            procurar na direita: se o procurado for maior que o central
            repetir, recursivamente, até o elemento procurado ser o central (ou não, em caso de falha)
        complexidade: logaritma
        interpolation search
            (procurado-primeiro)/(ultimo-primeiro)=proporção de busca
            pode falhar se a distribuição das chaves não for boa
    árvore binária de busca
        flexibilidade de inserção em listas encadeadas
        eficiência da busca em vetores ordenados
        estrutura:
            todo nó interno tem um apontamento à direita e um à esquerda
                sub-árvore direita: os nós maiores que a raiz
                sub-árvore esquerda: os nós menores que a raiz
            nó folha aponta NULL
            permite a busca binária de um nó a partir da raiz
        chaves: conteúdo dos nós
        inserção:
            elementos menores a esquerda
            elementos maiores a direita
        remoção:
            filho único: este assume a posição
            dois filhos: outro nó adota os filhos e assume a posição
                se o pai adotivo tiver filho, esse será adotado pelo avô
            menor dos da direita:
                menor dos maiores
            maior dos da esquerda:
                maior dos menores
        performance:
            depende do balanceamento da árvore
                nós bem distribuidos
                altura=lgN
                operações em rotação
                exemplos:
                    AVL
                    RED-BLACK
            melhor caso: lgN
            pior caso: N
            não balanceada
                caso médio: 2lgN